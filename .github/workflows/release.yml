name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: cassh2rs
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            binary: cassh2rs
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary: cassh2rs
            
          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: cassh2rs
          - os: macos-latest
            target: aarch64-apple-darwin
            binary: cassh2rs
            
          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: cassh2rs.exe

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install cross-compilation tools
      if: matrix.os == 'ubuntu-latest'
      run: |
        cargo install cross --git https://github.com/cross-rs/cross
    
    - name: Build
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ] && [ "${{ matrix.target }}" != "x86_64-unknown-linux-gnu" ]; then
          cross build --release --target ${{ matrix.target }} --all-features
        else
          cargo build --release --target ${{ matrix.target }} --all-features
        fi
      shell: bash
    
    - name: Package
      run: |
        cd target/${{ matrix.target }}/release
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a ../../../cassh2rs-${{ matrix.target }}.zip ${{ matrix.binary }}
        else
          tar czf ../../../cassh2rs-${{ matrix.target }}.tar.gz ${{ matrix.binary }}
        fi
        cd -
      shell: bash
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: cassh2rs-${{ matrix.target }}
        path: cassh2rs-${{ matrix.target }}.*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    
    - name: Generate release notes
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "# cassh2rs $VERSION" > RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## Installation" >> RELEASE_NOTES.md
        echo '```bash' >> RELEASE_NOTES.md
        echo 'curl -fsSL https://raw.githubusercontent.com/casapps/cassh2rs/main/scripts/install.sh | bash' >> RELEASE_NOTES.md
        echo '```' >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## What's New" >> RELEASE_NOTES.md
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 $VERSION^ 2>/dev/null || echo "")...$VERSION >> RELEASE_NOTES.md || echo "- Initial release" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## Downloads" >> RELEASE_NOTES.md
        echo "See Assets below for pre-built binaries." >> RELEASE_NOTES.md
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        body_path: RELEASE_NOTES.md
        files: artifacts/*/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}